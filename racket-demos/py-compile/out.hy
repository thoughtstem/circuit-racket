(import express) (import tslib) (import (tslib (*))) (defn update () (global state) (do (if (shake 10) (angry) (flicker)))) (defn setup () (global state) (do (play-riff (, (, 261.63 0.125) (, 293.66 0.125) (, 659.25 0.125) (, 698.46 0.125) (, 783.99 0.125) (, 880.0 0.125))) (set-brightness 0.5) (do (setv (. state ["memory"] ["main-color"]) (if True (, 0 0 255) "blue")) state) (set-lights (. state ["memory"] ["main-color"])) (set-servo board.A1 90 1))) (defn angry () (global state) (do (for (n (range (int (* 12 (random.random))))) (set-brightness 1) (set-lights (if True (, 255 0 0) "red")) (do (time.sleep 0.025) (express.cpx.pixels.show)) (set-lights (if True (, 0 0 0) "black")) (play-tone (pick-random 100 500) 0.1) (do (time.sleep 0.01) (express.cpx.pixels.show))) (do (time.sleep 0.5) (express.cpx.pixels.show)) (set-servo board.A1 90 0.05))) (defn flicker () (global state) (do (set-brightness (random.random)) (do (time.sleep (/ (random.random) 20)) (express.cpx.pixels.show)) (set-lights (. state ["memory"] ["main-color"])) (set-servo board.A1 90 0.05))) (setup) (while True (ir-receive) (update))